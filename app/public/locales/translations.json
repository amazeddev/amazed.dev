{
  "en": {
    "header": {
      "home": "Home",
      "blog": "Blog",
      "about": "About me"
    },
    "main": {
      "greeting": "Software engineer,\ntech enthusiast,\n lifelong learner.",
      "banner": {
        "paragraph": "Hi! I am Sebastian - Backend Developer specializing in Node.js (TypeScript), with a strong focus on AI integration and Infrastructure as Code. Experienced in both microservices and serverless architectures, working daily with AWS and Docker. \nCurrently exploring Agentic AI and learning Go in my free time."
      },
      "blogs": {
        "caption": "Latest blog posts"
      },
      "cvBtn": "Get my CV"
    },
    "search": {
      "noPosts": "Nothing found...",
      "placeholder": "search posts..."
    },
    "blog": {
      "paragraph": "The entries below document my learning process and serve as a reference for information I may want to revisit in the future, whether for professional work or personal projects. \n All articles are written as notes from the software development process, presenting solutions to specific problems. I always follow the approach of \"Make sh*t works!\", which is why many entries focus on building and running a simple application that is then progressively developed, step by step, in subsequent articles."
    },
    "about": {
      "banner": {
        "title": "About me",
        "paragraph": "I entered the IT world in an unconventional way – without a formal degree, but with strong determination. I quickly discovered that programming is not just a job for me, but also a passion for creating things that truly work and solve real problems. Today, I build backends in various technologies – from microservices to serverless architecture – always choosing tools based on the goal, not the other way around. Every project is an opportunity for me to learn something new and do it better than I did yesterday."
      },
      "stack": {
        "title": "Tech stack",
        "tech": "Technologies",
        "languages": {
          "title": "Programing languages",
          "paragraph": "In my commercial work, I most often use a combination of Node.js and TypeScript, which form the foundation of my development toolkit. In my free time, I enjoy experimenting with Go, creating personal projects and tools with a focus on simplicity and high performance. In the past, I have also worked with Python, mainly in the context of microservices as well as data processing and analysis. This allows me to select the right language and technology to match the specific problem – not the other way around."
        },
        "tools": {
          "title": "Back-end technologies",
          "paragraph": "My primary backend framework is Nest.js, which I use to build microservice-based applications and asynchronous communication systems using message brokers (e.g., RabbitMQ). Depending on the needs, I also work with other communication patterns such as RPC or real-time connections via sockets. \n When required, I develop serverless solutions, often based on AWS Lambda. I have experience working with both relational and non-relational databases, particularly MongoDB and Redis, as well as full-text search engines like Elasticsearch."
        },
        "ai": {
          "title": "Artificial Intelligence",
          "paragraph": "I have been exploring artificial intelligence and its applications in software development for some time now. I’m particularly interested in integrating AI models into backend systems and leveraging them to support and automate processes within applications. I experiment with tools like LangChain and Ollama, as well as approaches such as RAG and Agentic AI. \n I also use AI tools daily for writing code, creating tests, and producing documentation. This speeds up my work and allows me to focus on other creative and high-value tasks."
        },
        "infrastructure": {
          "title": "Infrastructure",
          "paragraph": "In both my professional and personal projects, I aim to design solutions that are cloud-ready from the very beginning. I most frequently work with AWS, Docker, and the Infrastructure as Code approach using Terraform. \n I regularly work with CI/CD pipelines, mainly using GitLab CI and GitHub Actions, and occasionally Jenkins. Currently, I’m expanding my knowledge of Kubernetes and advanced AWS services to create even more scalable and fault-tolerant systems."
        }
      }
    }
  },
  "pl": {
    "header": {
      "blog": "Blog",
      "about": "O mnie"
    },
    "main": {
      "banner": {
        "paragraph": "Cześć! Jestem Sebastian - Backend Developer, specjalizujący się w Node.js (TypeScript), z wysokim naciskiem na integrację AI oraz Infrastructure as Code. Ekspercki w architekturach mikroserwisów i serverless, codziennie pracujący z AWS i Docker. \n Obecnie eksperymentuję z Agentic AI i uczę się Go w wolnym czasie."
      },
      "blogs": {
        "caption": "Najnowsze wpisy na blogu"
      },
      "cvBtn": "Pobierz CV"
    },
    "search": {
      "noPosts": "Brak pasujących wpisów...",
      "placeholder": "szukaj postów..."
    },
    "blog": {
      "paragraph": "Wpisy zamieszczone poniżej są zapisem procesu mojej nauki i referencją informacji, do których w przyszłości mogę chcieć wrócić podczas pracy zawodowej i prywatnych projektów. \nWszystkie artykuły pisane są w formie notatek z procesu tworzenia oprogramowania i przestawiają sposoby na rozwiązanie konkretnego problemu. Zawsze kieruje się podejściem \"Make sh*t works!\", stąd też często wpisy przedstawiają prosty przepis na budowę i uruchomienie aplikacji, która w kolejnych artykułach jest rozwijana, etap, po etapie."
    },
    "about": {
      "banner": {
        "title": "O mnie",
        "paragraph": "Do IT trafiłem nietypową drogą – bez dyplomu, ale z ogromną determinacją. Szybko odkryłem, że programowanie to dla mnie nie tylko praca, ale i pasja do tworzenia rzeczy, które realnie działają i rozwiązują problemy. Dziś tworzę backendy w różnych technologiach – od mikroserwisów po architekturę serverless – zawsze dobierając narzędzia do celu, a nie odwrotnie. Każdy projekt to dla mnie okazja, by nauczyć się czegoś nowego i zrobić to lepiej niż wczoraj."
      },
      "stack": {
        "title": "Stack technologiczny",
        "tech": "Technologie",
        "languages": {
          "title": "Języki programowania",
          "paragraph": "W pracy komercyjnej najczęściej korzystam z połączenia Node.js i TypeScript, które stanowią mój podstawowy warsztat programistyczny. Po godzinach chętnie eksperymentuję z Go, tworząc własne projekty i narzędzia, często w duchu prostoty i wysokiej wydajności. W przeszłości pracowałem również z Pythonem, głównie w kontekście mikroserwisów oraz przetwarzania i analizy danych. Dzięki temu potrafię dobierać język i technologię do specyfiki problemu, a nie odwrotnie."
        },
        "tools": {
          "title": "Technologie backendowe",
          "paragraph": "Moim głównym narzędziem w backendzie jest Nest.js, w którym tworzę aplikacje oparte o mikroserwisy i komunikację asynchroniczną z wykorzystaniem brokerów wiadomości (np. RabbitMQ). W zależności od potrzeb stosuję także inne formy wymiany danych, jak RPC czy połączenia w czasie rzeczywistym oparte o sockety. \n Jeśli projekt tego wymaga, tworzę rozwiązania serverless, często na bazie AWS Lambda. Mam doświadczenie zarówno w pracy z bazami relacyjnymi, jak i nierelacyjnymi, w tym szczególnie MongoDB i Redis, a także z wyszukiwarkami pełnotekstowymi, takimi jak Elasticsearch."
        },
        "ai": {
          "title": "Sztuczna inteligencja",
          "paragraph": "Od dłuższego czasu zgłębiam tematykę sztucznej inteligencji i jej zastosowań w programowaniu. Interesuje mnie przede wszystkim integracja modeli AI z backendem oraz to, jak mogą one wspierać i automatyzować procesy w aplikacjach. Eksperymentuję z narzędziami takimi jak LangChain czy Ollama, a także z podejściami typu RAG i Agentic AI. \nRównież na codzień korzystam z narzędzi AI do tworzenia kodu, testów i pisanie dokumentacji. Przyspiesza to moją pracę i pozwala na skupienie się na innych, twórczych zadaniach."
        },
        "infrastructure": {
          "title": "Infrastruktura",
          "paragraph": "Zarówno w pracy, jak i w projektach prywatnych, staram się tworzyć rozwiązania od początku przygotowane do działania w chmurze. Najczęściej korzystam z AWS, Dockera oraz podejścia Infrastructure as Code przy użyciu Terraform. \n Regularnie pracuję z pipeline’ami CI/CD, głównie w oparciu o GitLab CI i GitHub Actions, a sporadycznie także Jenkins. Obecnie rozwijam swoją wiedzę w zakresie Kubernetesa oraz zaawansowanych usług AWS, aby móc tworzyć jeszcze bardziej skalowalne i odporne na awarie systemy."
        }
      }
    }
  }
}
